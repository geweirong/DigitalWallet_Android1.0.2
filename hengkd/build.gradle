apply plugin: 'com.android.application'
apply plugin: 'walle'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
//kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-kapt'
kapt {
    generateStubs = true
}
android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.innext.szqb"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 10102
        versionName "1.0.2"
        multiDexEnabled true
        resValue "string", "tray__authority", "com.innext.szqb.tray"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构  bugly的内侧分发也需要
            abiFilters 'armeabi', 'x86', 'armeabi-v7a' //,'armeabi-v7a',arm64-v8a,'x86_64'
        }

        externalNativeBuild {
            cmake {
                abiFilters "armeabi", "armeabi-v7a", "x86"
            }
        }

        /*控制代码的是否上线,只有在上线的时候需要修改*/
        /*控制是否使用bugly测试账号的key，生产发包，需要改为false*/
        buildConfigField("boolean", "IS_TEST", "false")
    }
    signingConfigs {
        debug {
            storeFile file("hengszqb.jks")
            storePassword "hengkd"
            keyAlias "数字钱包"
            keyPassword "hengkd"
        }
        release {
            storeFile file("hengszqb.jks")
            storePassword "hengkd"
            keyAlias "数字钱包"
            keyPassword "hengkd"
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        disable 'Missing  Translation', 'ExtraTranslation'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
        //kotlin与Java混合编译，不需要配置这句话
//        main.java.srcDirs += 'src/main/kotlin'
    }


    buildTypes {
        release {
            buildConfigField 'String', 'API_DOMAIN', '"http://a.shuziqb.com/hkd_api/"'
            buildConfigField 'String', 'BOOT_DOMAIN', '"http://a.shuziqb.com/hkd_boot/"'
            buildConfigField 'String', 'API_CONTRACTR', '"http://101.132.78.154:23080/hkd_api/"'
            buildConfigField 'String', 'MOXIE_KEY', '"d77e0c5d5ccc46dfb20e03d290677a2a"'//正式
            buildConfigField 'boolean', 'LOG_DEBUG', 'false'
            minifyEnabled true
            // 移除无用的resource文件
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField 'String', 'API_DOMAIN', '"http://10.32.1.3:28080/hkd_api/"'
            buildConfigField 'String', 'BOOT_DOMAIN', '"http://10.32.1.3:8084/hkd_boot/"'
//            buildConfigField 'String', 'API_DOMAIN', '"http://10.32.1.3:28080/hkd_api/"'
//            buildConfigField 'String', 'BOOT_DOMAIN', '"http://192.168.1.144:8084/hkd_boot/"'
            buildConfigField 'String', 'API_CONTRACTR', '"http://10.32.1.3:80/"'
            buildConfigField 'String', 'MOXIE_KEY', '"122447dcd4d44f1abc436bf0b20d138f"'//已更换测试
            buildConfigField 'boolean', 'LOG_DEBUG', 'true'
            //混淆
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.release
            debuggable true
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //指定打包后应用名称
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def moduleName = 'hengszqb'
            if (variant.buildType.name == 'debug') {
                outputFileName = "${moduleName}_${defaultConfig.versionName}_debug.apk"
            } else if (variant.buildType.name == 'release') {
                outputFileName = "${moduleName}_${defaultConfig.versionName}_release.apk"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    jcenter()
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
//    provided fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'com.jakewharton:butterknife:8.4.0'

    //    compile 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
//    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'

    //突破Dex文件方法数不能超过最大值65536的上限
    compile 'com.android.support:multidex:1.0.1'

    //图片加载框架
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    //json解析框架
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.alibaba:fastjson:1.2.24'

    //网络加载框架
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'

    //网络加载封装
    compile 'com.squareup.retrofit2:retrofit:2.0.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'

    /*compile 'com.squareup.retrofit2:converter-scalars:2.0.0' 返回类型转成String */
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.2.0'
    compile 'io.reactivex:rxjava:1.1.2'
    compile 'io.reactivex:rxandroid:1.1.0'

    //总线处理框架
    compile 'org.greenrobot:eventbus:3.0.0'

    //log工具
    compile 'com.orhanobut:logger:1.15'

    //bug检测

    //compile 'com.tencent.bugly:crashreport:latest.release'
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
    compile 'com.tencent.bugly:nativecrashreport:latest.release'

    //face++ 人脸识别
    compile files('libs/jg_filter_sdk_1.1.jar')
    compile files('libs/licensemanager-v1.1.jar')
    compile files('libs/umeng-analytics-v6.0.4.jar')
    compile files('libs/utdid4all-1.0.4.jar')
    compile files('libs/wup-1.0.0.E-SNAPSHOT.jar')
    compile files('libs/zmxySDKALCmini_V1.01450366738902_release.jar')
    compile project(':SpinkitLoadingLib')

    //友盟相关库与代码
    compile project(':PlatFormLibs')

    //banner
    compile project(':banner')

    // 极光

    //替代Sp的跨进程存储库
    compile 'net.grandcentrix.tray:tray:0.11.1'

    //瓦力打包
    compile 'com.meituan.android.walle:library:1.1.0'

    //    compile 'com.youth.banner:banner:1.4.9'

    //最新版本
    compile files('libs/livenessdetection-proguard-2.4.4.jar')
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    compile files('libs/tbs_sdk_thirdapp_v3.2.0.jar')
    compile 'com.lidong.pdf:android_pdf:1.0.1'

    //constraint-layout
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    //progressmanager
    compile 'me.jessyan:progressmanager:1.5.0'

    //anko
    compile "org.jetbrains.anko:anko-commons:$anko_version"
    compile "org.jetbrains.anko:anko-support-v4-commons:$anko_version"
    compile "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"

    //brvah
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'

    //添加魔蝎aar
    compile(name: 'moxie-client-1.3.6.7', ext: 'aar')

    //stetho

    //    compile 'com.facebook.stetho:stetho-okhttp3:1.4.2'
    compile 'com.facebook.stetho:stetho:1.5.0'

    //rxpermissions
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar'
    implementation project(':matisse')
    compile 'com.anupcowkur:reservoir:3.1.0'
    //极光
    implementation files('libs/jcore-android-1.2.0.jar')
    implementation files('libs/jpush-android-3.1.2.jar')
    //数据魔盒
    compile(name: 'android_shujumohe_sdk_beta_20180131_1.2.5', ext: 'aar')
}
walle {//https://github.com/Meituan-Dianping/walle
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    apkFileNameFormat = '${appName}-${buildType}-v${versionName}-${channel}.apk'
    //configFile与channelFile两者必须存在一个，否则无法生成渠道包。两者都存在时优先执行configFile
    //channelFile = new File("${project.getProjectDir()}/channel")
    configFile = new File("${project.getProjectDir()}/config.json")
}
